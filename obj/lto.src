	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_cxmalloc_init
_cxmalloc_init:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	(_usr_malloc), hl
	ld	(_usr_free), de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cxmalloc_context_create
_cxmalloc_context_create:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 12)
	ld	bc, 0
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_3
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_3
	ld	a, (ix + 9)
	ld	hl, _cxmalloc_malloc
	ld	(iy), a
	ld	(iy + 1), de
	ld	(iy + 4), bc
	ld	(iy + 7), hl
	ld	hl, _cxmalloc_free
	ld	(iy + 10), hl
BB1_3:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	c, -1
	ld	b, 0
	ld	a, c
	jr	nz, BB1_5
	ld	a, b
BB1_5:
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB1_7
	ld	c, b
BB1_7:
	and	a, c
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cxmalloc_malloc
_cxmalloc_malloc:
	ld	hl, -6
	call	__frameset
	ld	bc, 0
	ld	de, (_usr_malloc)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_6
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_6
	ld	hl, (ix + 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_6
	ld	(ix - 3), de
	ex	de, hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 4)
	add	hl, de
	ex	de, hl
	ld	iy, (ix + 6)
	ld	hl, (iy + 1)
	or	a, a
	sbc	hl, de
	jr	c, BB2_6
	ld	de, 3
	ld	hl, (ix + 9)
	add	hl, de
	ld	(ix - 6), hl
	push	hl
	ld	hl, (ix - 3)
	call	__indcallhl
	ld	bc, 0
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_6
	ld	hl, (ix + 6)
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	bc
	pop	iy
	ld	hl, (iy + 4)
	ld	de, (ix - 6)
	add	hl, de
	ld	(iy + 4), hl
	ld	hl, (ix + 9)
	ld	iy, (ix - 3)
	ld	(iy), l
	ld	(iy + 1), h
	push	bc
	pop	hl
	ld	a, (hl)
	ld	(iy + 2), a
	lea	bc, iy + 3
BB2_6:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_cxmalloc_free
_cxmalloc_free:
	ld	hl, -3
	call	__frameset
	ld	e, 0
	ld	bc, (_usr_free)
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_3
	ld	hl, (ix + 6)
	ld	iy, (ix + 9)
	ld	l, (hl)
	ld	a, (iy - 1)
	cp	a, l
	jr	nz, BB3_3
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 4)
	ld	(ix - 3), bc
	ld	iy, (ix + 9)
	ld	de, (iy - 6)
	ld	bc, 0
	ld	c, e
	ld	b, d
	or	a, a
	sbc	hl, bc
	ld	iy, (ix + 6)
	ld	(iy + 4), hl
	ld	iy, (ix + 9)
	pea	iy - 3
	ld	hl, (ix - 3)
	call	__indcallhl
	ld	e, 1
	pop	hl
BB3_3:
	ld	a, e
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_usr_malloc
_usr_malloc:
	rb	3

	section	.bss,"aw",@nobits
	public	_usr_free
_usr_free:
	rb	3

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__Unwind_SjLj_Unregister
	extern	__indcallhl
	extern	__frameset0
